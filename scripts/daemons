#!/usr/bin/env python3

import os
import sys
import argparse
from traceback import format_exc

sys.path.insert(0, os.path.split(os.path.split(os.path.abspath(__file__))[0])[0])

from cc_server.configuration import Config
from cc_server import worker, tee

daemons = [tee, worker]

config = Config()


def name(daemon):
    return daemon.__name__.split('.')[-1]


def show_list(daemon):
    info = 'ONLINE'
    pid = None
    try:
        pid = daemon.connect(config).get_pid()
    except:
        info = 'OFFLINE'
    print('* {} | PID: {} | {}'.format(name(daemon), pid, info))


def stop(daemon):
    info = 'STOPPED'
    pid = None
    try:
        pid = daemon.connect(config).get_pid()
        daemon.stop(config)
    except:
        info = 'ALREADY OFFLINE'
    print('* {} | PID: {} | {}'.format(name(daemon), pid, info))


def start(daemon):
    info = 'ALREADY ONLINE'
    pid = 'None'
    try:
        pid = daemon.connect(config).get_pid()
    except:
        info = 'STARTED'
        try:
            pid = daemon.start(config).get_pid()
        except:
            info = 'COULD NOT START:\n{}'.format(format_exc())
    print('* {} | PID: {} | {}'.format(name(daemon), pid, info))


parser = argparse.ArgumentParser(description='Control daemon processes of CC-Server.')
parser.add_argument('action', choices=('list', 'stop'))

args = parser.parse_args()

if args.action == 'list':
    for d in daemons:
        show_list(d)

elif args.action == 'stop':
    for d in daemons[::-1]:
        stop(d)

elif args.action == 'start':
    for d in daemons:
        start(d)

elif args.action == 'restart':
    for d in daemons[::-1]:
        stop(d)
    for d in daemons:
        start(d)

