# see documentation for configuration instructions
# ------------------------------------------------

[server_web]
external_url = 'https://cc.my-domain.tld/cc/'
bind_host = '127.0.0.1'
bind_port = 8000
# num_workers = 4

[server_master]
external_url = 'tcp://localhost:8001'
bind_host = '127.0.0.1'
bind_port = 8001
scheduling_interval_seconds = 60

[server_log]
external_url = 'tcp://localhost:8002'
bind_host = '127.0.0.1'
bind_port = 8002
log_dir = '~/.cc_server/logs/'
suppress_stdout = false

[mongo]
username = 'ccdbAdmin'
password = 'PASSWORD'
host = 'localhost'
port = 27017
db = 'ccdb'

[docker]
thread_limit = 8
api_timeout = 30
net = 'cc-overlay-network'

[docker.nodes.cc-node1]
base_url = 'tcp://192.168.99.101:2376'

[docker.nodes.cc-node1.tls]
verify = '/home/christoph/.docker/machine/machines/cc-node1/ca.pem'
client_cert = [
    '/home/christoph/.docker/machine/machines/cc-node1/cert.pem',
    '/home/christoph/.docker/machine/machines/cc-node1/key.pem'
]
assert_hostname = false

[docker.nodes.cc-node2]
base_url = 'tcp://192.168.99.102:2376'

[docker.nodes.cc-node2.tls]
verify = '/home/christoph/.docker/machine/machines/cc-node2/ca.pem'
client_cert = [
    '/home/christoph/.docker/machine/machines/cc-node2/cert.pem',
    '/home/christoph/.docker/machine/machines/cc-node2/key.pem'
]
assert_hostname = false

[defaults.application_container_description]
entry_point = 'python3 /opt/container_worker'

[defaults.data_container_description]
image = 'docker.io/curiouscontainers/cc-image-ubuntu'
entry_point = 'python3 /opt/container_worker'
container_ram = 512

# only necessary if data container image is in private registry
# [defaults.data_container_description.registry_auth]
# username = 'REGISTRY_USER'
# password = 'PASSWORD'

[defaults.scheduling_strategies]
container_allocation = 'spread'

[defaults.error_handling]
max_task_trials = 3
dead_node_invalidation = true

# entirely optional and only applicable if dead_node_invalidation is true
# [defaults.error_handling.dead_node_notification]
# url = 'https://my-domain.tld/cluster'
# auth = {'auth_type' = 'basic', 'username' = 'admin', 'password' = 'PASSWORD'}

[defaults.authorization]
num_login_attempts = 3
block_for_seconds = 120
tokens_valid_for_seconds = 172800
